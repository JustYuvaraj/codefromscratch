import { ContestInfo } from "../types";
/**
 * Extracts the last segment of a URL path.
 * @param {string} url - The URL from which to extract the path.
 * @returns {string} The last segment of the URL path.
 * @example
 * // returns 'page.html'
 * getPath('https://example.com/path/to/page.html');
 */
export declare function getPath(url: string): string;
/**
 * Calculates coordinates for plotting a rating history graph based on contest information.
 * @param {ContestInfo[]} history - Array of contest information representing rating history.
 * @returns {object[]} An array of objects containing x and y coordinates along with contest information.
 */
export declare function getCordinates(history: ContestInfo[]): ({
    x: number;
    y: number;
} & ContestInfo)[];
/**
 * Calculates various parameters required for rendering a line chart.
 * @param {number} width - The width of the chart area.
 * @param {number} height - The height of the chart area.
 * @param {Array<ContestInfo & { x: number, y: number }>} data - Array of data points with x and y coordinates.
 * @param {number} precision - The precision of the data values.
 * @returns  An object containing calculated parameters for rendering the chart, or undefined if data is empty.
 */
export declare function LineChartCalculations(width: number, height: number, data: (ContestInfo & {
    x: number;
    y: number;
})[], precision: number): {
    FONT_SIZE: number;
    padding: number;
    maximumXFromData: number;
    maximumYFromData: number;
    chartHeight: number;
    chartWidth: number;
    points: string;
} | undefined;
/**
 * Calculates opacity based on the count and maximum value.
 * @param {number} count - The count value.
 * @param {number} [max=8] - The maximum value. Default is 8.
 * @returns {number} The calculated opacity value.
 */
export declare function calcOpacity(count: number, max?: number): number;
