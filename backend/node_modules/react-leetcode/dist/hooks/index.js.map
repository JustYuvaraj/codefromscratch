{"version":3,"file":"index.js","sources":["../../src/hooks/index.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n\r\n/**\r\n * Custom React hook for fetching data asynchronously.\r\n * @param {Function} fetchData - A function that returns a promise which resolves to the fetched data.\r\n * @returns An object containing the fetched data, loading state, and error state.\r\n * @template T - The type of data being fetched.\r\n */\r\nexport function useFetch<T>(fetchData: () => Promise<T>) {\r\n    const [data, setData] = useState<T>();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState<unknown>();\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n\r\n        (async () => {\r\n            try {\r\n                const res = await fetchData();\r\n                setData(res);\r\n            } catch (error) {\r\n                setError(error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        })()\r\n    }, [fetchData])\r\n\r\n    return {\r\n        data,\r\n        loading,\r\n        error\r\n    }\r\n}"],"names":["useFetch","fetchData","data","setData","useState","loading","setLoading","error","setError","useEffect","res"],"mappings":";AASO,SAASA,EAAYC,GAA6B;AACrD,QAAM,CAACC,GAAMC,CAAO,IAAIC,EAAY,GAC9B,CAACC,GAASC,CAAU,IAAIF,EAAS,EAAK,GACtC,CAACG,GAAOC,CAAQ,IAAIJ,EAAkB;AAE5C,SAAAK,EAAU,MAAM;AACZ,IAAAH,EAAW,EAAI,IAEd,YAAY;AACL,UAAA;AACM,cAAAI,IAAM,MAAMT;AAClB,QAAAE,EAAQO,CAAG;AAAA,eACNH,GAAO;AACZ,QAAAC,EAASD,CAAK;AAAA,MAAA,UAChB;AACE,QAAAD,EAAW,EAAK;AAAA,MACpB;AAAA,IAAA;EACD,GACJ,CAACL,CAAS,CAAC,GAEP;AAAA,IACH,MAAAC;AAAA,IACA,SAAAG;AAAA,IACA,OAAAE;AAAA,EAAA;AAER;"}