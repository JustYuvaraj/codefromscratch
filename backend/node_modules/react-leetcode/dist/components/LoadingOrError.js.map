{"version":3,"file":"LoadingOrError.js","sources":["../../src/components/LoadingOrError.tsx"],"sourcesContent":["import '../index.css';\r\n\r\nimport { memo } from \"react\";\r\n\r\ntype Props = {\r\n    loading?: boolean;\r\n    error?: unknown;\r\n    loadingComponent?: React.ReactNode;\r\n}\r\n\r\n\r\n/**\r\n * Component for rendering loading state or error state.\r\n * @param {object} props - The props object.\r\n * @param {boolean} [props.loading] - Flag indicating whether data is loading.\r\n * @param {unknown} [props.error] - The error object, if any.\r\n * @param {React.ReactNode} [props.loadingComponent] - Custom loading component to be displayed.\r\n * @returns The JSX element representing loading state, error state, or an empty element.\r\n */\r\nfunction LoadingOrError({\r\n    loading: isLoading,\r\n    error,\r\n    loadingComponent,\r\n}: Props) {\r\n\r\n    if(isLoading) {\r\n        if(loadingComponent) {\r\n            return (\r\n                <div id=\"user_defined_loading_component\" className=\"flex items-center justify-center gap-2\">\r\n                    {loadingComponent}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div id=\"loading_container\" className=\"flex flex-col\">\r\n                <div id=\"loading_dots_container\" className=\"flex items-center justify-center gap-2 animate-pulse\">\r\n                    <div className=\"w-1 h-1 bg-gray-600 rounded-full\" />\r\n                    <div className=\"w-1 h-1 bg-gray-600 rounded-full\" />\r\n                    <div className=\"w-1 h-1 bg-gray-600 rounded-full\" />\r\n                </div>\r\n                <p id=\"loading_text\" className=\"text-[10px] text-white font-bold text-center ml-[12px]\">Loading...</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(error) {\r\n        return (\r\n            <div id=\"error_container\" className=\"text-red-500\">\r\n                Somethinng went wrong, Could not load data\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <></>\r\n}\r\n\r\nconst MemoizedLoadingOrError = memo(LoadingOrError);\r\n\r\nexport default MemoizedLoadingOrError;"],"names":["LoadingOrError","isLoading","error","loadingComponent","jsxs","jsx","Fragment","MemoizedLoadingOrError","memo"],"mappings":";;AAmBA,SAASA,EAAe;AAAA,EACpB,SAASC;AAAA,EACT,OAAAC;AAAA,EACA,kBAAAC;AACJ,GAAU;AAEN,SAAGF,IACIE,0BAEM,OAAI,EAAA,IAAG,kCAAiC,WAAU,0CAC9C,UACLA,EAAA,CAAA,IAKHC,gBAAAA,EAAAA,KAAA,OAAA,EAAI,IAAG,qBAAoB,WAAU,iBAClC,UAAA;AAAA,IAAAA,gBAAAA,EAAA,KAAC,OAAI,EAAA,IAAG,0BAAyB,WAAU,wDACvC,UAAA;AAAA,MAACC,gBAAAA,EAAAA,IAAA,OAAA,EAAI,WAAU,mCAAmC,CAAA;AAAA,MAClDA,gBAAAA,EAAAA,IAAC,OAAI,EAAA,WAAU,mCAAmC,CAAA;AAAA,MAClDA,gBAAAA,EAAAA,IAAC,OAAI,EAAA,WAAU,mCAAmC,CAAA;AAAA,IAAA,GACtD;AAAA,0BACC,KAAE,EAAA,IAAG,gBAAe,WAAU,0DAAyD,UAAU,cAAA;AAAA,EACtG,EAAA,CAAA,IAILH,0BAEM,OAAI,EAAA,IAAG,mBAAkB,WAAU,gBAAe,UAEnD,6CAAA,CAAA,IAICG,gBAAAA,EAAA,IAAAC,YAAA,CAAA,CAAA;AACb;AAEM,MAAAC,IAAyBC,EAAKR,CAAc;"}