{"version":3,"file":"ContestGraph.js","sources":["../../../src/components/contestInfo/ContestGraph.tsx"],"sourcesContent":["import { useMemo } from \"react\";\r\nimport '../../index.css';\r\nimport { ContestInfo } from \"../../types\";\r\nimport { LineChartCalculations } from \"../../utils\";\r\n\r\nimport LabelsXAxis from \"./LabelsXAxis\";\r\nconst STROKE = 1;\r\n\r\ntype Props = {\r\n    data: (ContestInfo & { x: number, y: number })[];\r\n    height?: number;\r\n    width?: number;\r\n    precision?: number;\r\n    activeIndex: number;\r\n    setActiveIndex: (index: number) => void;\r\n}\r\n\r\n\r\n/**\r\n * Component for rendering a line chart.\r\n * \r\n * @param {object} props - Props for the LineChart component.\r\n * @param {ContestInfo[]} props.data - The data points for the line chart.\r\n * @param {number} [props.height=150] - The height of the chart.\r\n * @param {number} [props.width=500] - The width of the chart.\r\n * @param {number} [props.precision=2] - The precision of the chart.\r\n * @param {number} props.activeIndex - The index of the active data point.\r\n * @param {function} props.setActiveIndex - Function to set the active index.\r\n * \r\n * @returns A React component for rendering a line chart.\r\n */\r\nconst LineChart = ({\r\n    data,\r\n    height = 150,\r\n    width = 500,\r\n    precision = 2,\r\n    activeIndex,\r\n    setActiveIndex\r\n}: Props) => {\r\n\r\n    const values = useMemo(\r\n        () => LineChartCalculations(width, height, data, precision),\r\n        [data, height, precision, width]\r\n    );\r\n\r\n    if(values === undefined) return <></>\r\n\r\n    const {\r\n        padding,\r\n        chartWidth,\r\n        chartHeight,\r\n        maximumXFromData,\r\n        maximumYFromData\r\n    } = values;\r\n\r\n    return (\r\n        <svg\r\n            viewBox={`0 30 ${width} ${height}`}\r\n            id=\"line_chart_container\"\r\n            style={{\r\n                transform: 'scaleY(0.7)'\r\n            }}\r\n        >\r\n            <LabelsXAxis\r\n                height={height}\r\n                width={width}\r\n                data={[data[0], data[data.length - 1]]}\r\n                {...values}\r\n            />\r\n\r\n            <polyline\r\n                width={\"100%\"}\r\n                height={\"50\"}\r\n                id=\"line_chart_path\"\r\n                className=\"w-full\"\r\n                fill=\"none\"\r\n                stroke=\"rgb(202,138,4)\"\r\n                strokeWidth={STROKE}\r\n                points={values.points}\r\n            />\r\n\r\n            <g id=\"line_chart_points\">\r\n                {data.map((element, index) => (\r\n                    <circle\r\n                        id={`point_${index}`}\r\n                        onPointerMove={() => setActiveIndex(index)}\r\n                        onPointerLeave={() => setActiveIndex(-1)}\r\n                        key={index}\r\n                        cx={(element.x / maximumXFromData) * chartWidth + padding}\r\n                        cy={(element.y / maximumYFromData) * chartHeight + padding}\r\n                        r={STROKE * (activeIndex === index ? 3 : 2)}\r\n                        fill=\"rgb(202,138,4)\"\r\n                    />\r\n                ))}\r\n            </g>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default LineChart;"],"names":["STROKE","LineChart","data","height","width","precision","activeIndex","setActiveIndex","values","useMemo","LineChartCalculations","jsx","Fragment","padding","chartWidth","chartHeight","maximumXFromData","maximumYFromData","jsxs","LabelsXAxis","element","index"],"mappings":";;;;AAMA,MAAMA,IAAS,GAyBTC,IAAY,CAAC;AAAA,EACf,MAAAC;AAAA,EACA,QAAAC,IAAS;AAAA,EACT,OAAAC,IAAQ;AAAA,EACR,WAAAC,IAAY;AAAA,EACZ,aAAAC;AAAA,EACA,gBAAAC;AACJ,MAAa;AAET,QAAMC,IAASC;AAAA,IACX,MAAMC,EAAsBN,GAAOD,GAAQD,GAAMG,CAAS;AAAA,IAC1D,CAACH,GAAMC,GAAQE,GAAWD,CAAK;AAAA,EAAA;AAGnC,MAAGI,MAAW;AAAW,WAASG,gBAAAA,EAAA,IAAAC,YAAA,CAAA,CAAA;AAE5B,QAAA;AAAA,IACF,SAAAC;AAAA,IACA,YAAAC;AAAA,IACA,aAAAC;AAAA,IACA,kBAAAC;AAAA,IACA,kBAAAC;AAAA,EACA,IAAAT;AAGA,SAAAU,gBAAAA,EAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACG,SAAS,QAAQd,CAAK,IAAID,CAAM;AAAA,MAChC,IAAG;AAAA,MACH,OAAO;AAAA,QACH,WAAW;AAAA,MACf;AAAA,MAEA,UAAA;AAAA,QAAAQ,gBAAAA,EAAA;AAAA,UAACQ;AAAA,UAAA;AAAA,YACG,QAAAhB;AAAA,YACA,OAAAC;AAAA,YACA,MAAM,CAACF,EAAK,CAAC,GAAGA,EAAKA,EAAK,SAAS,CAAC,CAAC;AAAA,YACpC,GAAGM;AAAA,UAAA;AAAA,QACR;AAAA,QAEAG,gBAAAA,EAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACG,OAAO;AAAA,YACP,QAAQ;AAAA,YACR,IAAG;AAAA,YACH,WAAU;AAAA,YACV,MAAK;AAAA,YACL,QAAO;AAAA,YACP,aAAaX;AAAA,YACb,QAAQQ,EAAO;AAAA,UAAA;AAAA,QACnB;AAAA,QAEAG,gBAAAA,EAAAA,IAAC,OAAE,IAAG,qBACD,YAAK,IAAI,CAACS,GAASC,MAChBV,gBAAAA,EAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACG,IAAI,SAASU,CAAK;AAAA,YAClB,eAAe,MAAMd,EAAec,CAAK;AAAA,YACzC,gBAAgB,MAAMd,EAAe,EAAE;AAAA,YAEvC,IAAKa,EAAQ,IAAIJ,IAAoBF,IAAaD;AAAA,YAClD,IAAKO,EAAQ,IAAIH,IAAoBF,IAAcF;AAAA,YACnD,GAAGb,KAAUM,MAAgBe,IAAQ,IAAI;AAAA,YACzC,MAAK;AAAA,UAAA;AAAA,UAJAA;AAAA,QAMZ,CAAA,GACL;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAGZ;"}