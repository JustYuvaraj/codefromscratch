import { j as r } from "../../index-CuHmWrv0.js";
import { useMemo as j } from "react";
import { LineChartCalculations as _ } from "../../utils/index.js";
import g from "./LabelsXAxis.js";
const c = 1, C = ({
  data: o,
  height: t = 150,
  width: s = 500,
  precision: a = 2,
  activeIndex: p,
  setActiveIndex: e
}) => {
  const i = j(
    () => _(s, t, o, a),
    [o, t, a, s]
  );
  if (i === void 0)
    return /* @__PURE__ */ r.jsx(r.Fragment, {});
  const {
    padding: l,
    chartWidth: x,
    chartHeight: f,
    maximumXFromData: u,
    maximumYFromData: h
  } = i;
  return /* @__PURE__ */ r.jsxs(
    "svg",
    {
      viewBox: `0 30 ${s} ${t}`,
      id: "line_chart_container",
      style: {
        transform: "scaleY(0.7)"
      },
      children: [
        /* @__PURE__ */ r.jsx(
          g,
          {
            height: t,
            width: s,
            data: [o[0], o[o.length - 1]],
            ...i
          }
        ),
        /* @__PURE__ */ r.jsx(
          "polyline",
          {
            width: "100%",
            height: "50",
            id: "line_chart_path",
            className: "w-full",
            fill: "none",
            stroke: "rgb(202,138,4)",
            strokeWidth: c,
            points: i.points
          }
        ),
        /* @__PURE__ */ r.jsx("g", { id: "line_chart_points", children: o.map((m, n) => /* @__PURE__ */ r.jsx(
          "circle",
          {
            id: `point_${n}`,
            onPointerMove: () => e(n),
            onPointerLeave: () => e(-1),
            cx: m.x / u * x + l,
            cy: m.y / h * f + l,
            r: c * (p === n ? 3 : 2),
            fill: "rgb(202,138,4)"
          },
          n
        )) })
      ]
    }
  );
};
export {
  C as default
};
//# sourceMappingURL=ContestGraph.js.map
