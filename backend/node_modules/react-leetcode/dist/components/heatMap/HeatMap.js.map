{"version":3,"file":"HeatMap.js","sources":["../../../src/components/heatMap/HeatMap.tsx"],"sourcesContent":["import { forwardRef, memo, useCallback, useEffect, useRef, useState } from \"react\";\r\nimport leetcodeQuery from \"../../utils/leetcodeQuery\";\r\nimport { useFetch } from \"../../hooks\";\r\nimport LoadingOrError from \"../LoadingOrError\";\r\nimport { calcOpacity } from \"../../utils\"\r\nimport '../../index.css';\r\nexport type Props = {\r\n    userName: string,\r\n    loadingComponent?: JSX.Element\r\n    theme?: {\r\n        primaryColor?: string;\r\n        secondaryColor?: string;\r\n        bgColor?: string;\r\n    },\r\n    showUserName?: boolean;\r\n}\r\n\r\n\r\n/**\r\n * Represents a block in the heatmap.\r\n * @param {object} props - The props object.\r\n * @param {number} props.count - The count of submissions for the block.\r\n * @returns - The JSX element representing the block.\r\n */\r\nconst Block = ({\r\n    count,\r\n    width\r\n}: {\r\n    i: number,\r\n    count: number,\r\n    date: string,\r\n    width: number,\r\n}) => {\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    backgroundColor: `rgba(20, 255, 20, ${calcOpacity(count)})`,\r\n                    width: `${width}px`\r\n                }}\r\n                className={`sq-block aspect-square rounded-sm border border-black border-opacity-30`}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n/**\r\n * Component for displaying the heatmap of a user's submissions.\r\n * @param {object} props - The props object.\r\n * @param {React.Ref<HTMLDivElement>} ref - The ref to attach to the component's root element.\r\n * @param {string} props.userName - The username of the user.\r\n * @param {JSX.Element} [props.loadingComponent] - The loading component to display.\r\n * @param {object} [props.theme] - The theme configuration.\r\n * @param {string} [props.theme.primaryColor=\"rgba(34,211,238,1)\"] - The primary color.\r\n * @param {string} [props.theme.secondaryColor=\"rgba(209,213,219,1)\"] - The secondary color.\r\n * @param {string} [props.theme.bgColor=\"rgba(68,64,60,1)\"] - The background color.\r\n * @param {boolean} [props.showUserName=false] - Flag to show the username.\r\n * @returns {JSX.Element} - The JSX element representing the heatmap component.\r\n */\r\nconst HeatMap = forwardRef<HTMLDivElement, Props>(({\r\n    userName,\r\n    loadingComponent,\r\n    theme = {\r\n        primaryColor: \"rgba(34,211,238,1)\",\r\n        secondaryColor: \"rgba(209,213,219,1)\",\r\n        bgColor: \"rgba(68,64,60,1)\"\r\n    },\r\n    showUserName = false\r\n}, ref) => {\r\n    const [width, setWidth] = useState(69);\r\n    const divRef = useRef<HTMLDivElement>(null);\r\n\r\n    const fetchData = useCallback(() => {\r\n        return leetcodeQuery.fetchUserHeatMap(userName);\r\n    }, [userName])\r\n\r\n    const { data, loading: isLoading, error } = useFetch(fetchData);\r\n\r\n    useEffect(() => {\r\n        const newwidth = divRef.current?.getBoundingClientRect().width;\r\n        setWidth(newwidth || 69);\r\n    }, [isLoading])\r\n\r\n    if (isLoading || error || !data) {\r\n        return (\r\n            <LoadingOrError\r\n                loading={isLoading}\r\n                error={error}\r\n                loadingComponent={loadingComponent}\r\n            />\r\n        )\r\n    }\r\n\r\n    const last = data.length - 1;\r\n\r\n    return (\r\n        <div ref={divRef} className=\"w-full\">\r\n            <div\r\n                id=\"heat_map_container\"\r\n                style={{\r\n                    background: theme.bgColor\r\n                }}\r\n                ref={ref}\r\n                className=\"w-full gap-1 rounded-lg p-4 flex flex-col items-center justify-center\"\r\n            >\r\n                <h2\r\n                    id=\"heat_map_title\"\r\n                    style={{ color: theme.primaryColor }}\r\n                    className=\"flex justify-between font-medium w-full\"\r\n                >\r\n                    <span>Heatmap (Last 52 Weeks)</span>\r\n                    {showUserName && <span>{userName}</span>}\r\n                </h2>\r\n                <div\r\n                    id=\"heat_map\"\r\n                    className=\"w-full h-full grid grid-rows-7 grid-flow-col justify-center\"\r\n                    style={{\r\n                        rowGap: '1px',\r\n                        columnGap: '2px',\r\n                    }}\r\n                >\r\n                    {data.map((element, index) => (\r\n                        <Block\r\n                            width={width / 69}\r\n                            key={index}\r\n                            i={index}\r\n                            count={element.submissionCount}\r\n                            date={element.date}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <div\r\n                    id=\"heat_map_date_range\"\r\n                    style={{ color: theme.secondaryColor }}\r\n                    className=\"flex justify-between w-full\"\r\n                >\r\n                    <span>{data[0].date}</span>\r\n                    <span>{data[last - 1].date}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst MemoizedHeatMap = memo(HeatMap);\r\n\r\nexport default MemoizedHeatMap;"],"names":["Block","count","width","jsx","Fragment","calcOpacity","HeatMap","forwardRef","userName","loadingComponent","theme","showUserName","ref","setWidth","useState","divRef","useRef","fetchData","useCallback","leetcodeQuery","data","isLoading","error","useFetch","useEffect","newwidth","_a","LoadingOrError","last","jsxs","element","index","MemoizedHeatMap","memo"],"mappings":";;;;;;AAwBA,MAAMA,IAAQ,CAAC;AAAA,EACX,OAAAC;AAAA,EACA,OAAAC;AACJ,MAQYC,gBAAAA,MAAAC,EAAAA,UAAA,EAAA,UAAAD,gBAAAA,EAAA;AAAA,EAAC;AAAA,EAAA;AAAA,IACG,OAAO;AAAA,MACH,iBAAiB,qBAAqBE,EAAYJ,CAAK,CAAC;AAAA,MACxD,OAAO,GAAGC,CAAK;AAAA,IACnB;AAAA,IACA,WAAW;AAAA,EAAA;AAEnB,EAAA,CAAA,GAiBFI,IAAUC,EAAkC,CAAC;AAAA,EAC/C,UAAAC;AAAA,EACA,kBAAAC;AAAA,EACA,OAAAC,IAAQ;AAAA,IACJ,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,SAAS;AAAA,EACb;AAAA,EACA,cAAAC,IAAe;AACnB,GAAGC,MAAQ;AACP,QAAM,CAACV,GAAOW,CAAQ,IAAIC,EAAS,EAAE,GAC/BC,IAASC,EAAuB,IAAI,GAEpCC,IAAYC,EAAY,MACnBC,EAAc,iBAAiBX,CAAQ,GAC/C,CAACA,CAAQ,CAAC,GAEP,EAAE,MAAAY,GAAM,SAASC,GAAW,OAAAC,MAAUC,EAASN,CAAS;AAO1D,MALJO,EAAU,MAAM;;AACZ,UAAMC,KAAWC,IAAAX,EAAO,YAAP,gBAAAW,EAAgB,wBAAwB;AACzD,IAAAb,EAASY,KAAY,EAAE;AAAA,EAAA,GACxB,CAACJ,CAAS,CAAC,GAEVA,KAAaC,KAAS,CAACF;AAEnB,WAAAjB,gBAAAA,EAAA;AAAA,MAACwB;AAAAA,MAAA;AAAA,QACG,SAASN;AAAA,QACT,OAAAC;AAAA,QACA,kBAAAb;AAAA,MAAA;AAAA,IAAA;AAKN,QAAAmB,IAAOR,EAAK,SAAS;AAE3B,SACKjB,gBAAAA,EAAA,IAAA,OAAA,EAAI,KAAKY,GAAQ,WAAU,UACxB,UAAAc,gBAAAA,EAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACG,IAAG;AAAA,MACH,OAAO;AAAA,QACH,YAAYnB,EAAM;AAAA,MACtB;AAAA,MACA,KAAAE;AAAA,MACA,WAAU;AAAA,MAEV,UAAA;AAAA,QAAAiB,gBAAAA,EAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACG,IAAG;AAAA,YACH,OAAO,EAAE,OAAOnB,EAAM,aAAa;AAAA,YACnC,WAAU;AAAA,YAEV,UAAA;AAAA,cAAAP,gBAAAA,EAAAA,IAAC,UAAK,UAAuB,0BAAA,CAAA;AAAA,cAC5BQ,KAAiBR,gBAAAA,EAAAA,IAAA,QAAA,EAAM,UAASK,EAAA,CAAA;AAAA,YAAA;AAAA,UAAA;AAAA,QACrC;AAAA,QACAL,gBAAAA,EAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACG,IAAG;AAAA,YACH,WAAU;AAAA,YACV,OAAO;AAAA,cACH,QAAQ;AAAA,cACR,WAAW;AAAA,YACf;AAAA,YAEC,UAAKiB,EAAA,IAAI,CAACU,GAASC,MAChB5B,gBAAAA,EAAA;AAAA,cAACH;AAAA,cAAA;AAAA,gBACG,OAAOE,IAAQ;AAAA,gBAEf,GAAG6B;AAAA,gBACH,OAAOD,EAAQ;AAAA,gBACf,MAAMA,EAAQ;AAAA,cAAA;AAAA,cAHTC;AAAA,YAAA,CAKZ;AAAA,UAAA;AAAA,QACL;AAAA,QACAF,gBAAAA,EAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACG,IAAG;AAAA,YACH,OAAO,EAAE,OAAOnB,EAAM,eAAe;AAAA,YACrC,WAAU;AAAA,YAEV,UAAA;AAAA,cAAAP,gBAAAA,EAAA,IAAC,QAAM,EAAA,UAAAiB,EAAK,CAAC,EAAE,MAAK;AAAA,oCACnB,QAAM,EAAA,UAAAA,EAAKQ,IAAO,CAAC,EAAE,MAAK;AAAA,YAAA;AAAA,UAAA;AAAA,QAC/B;AAAA,MAAA;AAAA,IAAA;AAAA,EAER,EAAA,CAAA;AAER,CAAC,GAEKI,IAAkBC,EAAK3B,CAAO;"}