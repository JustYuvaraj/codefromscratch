{"version":3,"file":"OverallProgress.js","sources":["../../../src/components/solvedProblemsStat/OverallProgress.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport '../../index.css';\r\ntype Props = {\r\n    totalQuestions: number,\r\n    totalSolved: number,\r\n    primaryColor?: string,\r\n    secondaryColor?: string\r\n}\r\n\r\n/**\r\n * Component for displaying overall progress of solving problems.\r\n * @param {object} props - The props object.\r\n * @param {number} props.totalQuestions - The total number of questions.\r\n * @param {number} props.totalSolved - The number of questions solved.\r\n * @param {string} [props.primaryColor=\"rgba(34,211,238,1)\"] - The primary color.\r\n * @param {string} [props.secondaryColor=\"rgba(209,213,219,1)\"] - The secondary color.\r\n * @returns The JSX element representing the overall progress.\r\n */\r\nfunction OverallProgress({\r\n    totalQuestions,\r\n    totalSolved,\r\n    primaryColor = \"rgba(34,211,238,1)\",\r\n    secondaryColor = \"rgba(209,213,219,1)\"\r\n}: Props) {\r\n\r\n    const [showPercentage, setShowPercentage] = useState(false);\r\n\r\n    const solvedPercentage = ((totalSolved! / totalQuestions!) * 100).toFixed(2);\r\n    const radius = 55;\r\n    const circumference = 2 * Math.PI *radius\r\n    const offset = circumference * ((100 - parseFloat(solvedPercentage))/100)\r\n\r\n    const percentageBefore = solvedPercentage.split(\".\")[0]\r\n    const percentageAfter = solvedPercentage.split(\".\")[1] + \"%\";\r\n\r\n    return (\r\n        <svg\r\n            id=\"circular_progress_container\"\r\n            onMouseOver={() => {\r\n                setShowPercentage(true)\r\n            }}\r\n            onMouseOut={() => {\r\n                setShowPercentage(false)\r\n            }} \r\n            viewBox=\"0 0 160 160\" \r\n            style={{transform:\"rotate(-90deg)\"}}\r\n            className=\"h-[75%] w-[75%] flex items-start justify-start\"\r\n        >\r\n            <circle id=\"base_circle\" r={radius} cx=\"80\" cy=\"80\" \r\n                fill=\"transparent\" \r\n                stroke=\"#e0e0e0\"\r\n                strokeWidth=\"5px\" \r\n                opacity={0.3}\r\n            />\r\n            <circle \r\n                id=\"progress_circle\"\r\n                r={radius} cx=\"80\" cy=\"80\" \r\n                fill=\"transparent\" stroke={\"rgb(202,138,4)\"}\r\n                strokeWidth=\"6px\" \r\n                strokeDasharray={circumference} \r\n                strokeDashoffset={offset}\r\n                strokeLinecap=\"round\"\r\n                style={{borderRadius:\"50%\"}}\r\n            >\r\n                <animate id=\"animate_progress_circle\" attributeName=\"stroke-dashoffset\" values={`360;${offset}`} dur=\"2s\"></animate>\r\n            </circle>\r\n\r\n            <text\r\n                id=\"progress_percentage\"\r\n                x=\"50%\" y=\"50%\" \r\n                fill={primaryColor} fontSize=\"30px\" \r\n                textAnchor=\"middle\" \r\n                fontWeight=\"bold\"\r\n                style={{transform:\"rotate(90deg) translate(0, -156px)\"}}\r\n            >   \r\n                {showPercentage ? percentageBefore : totalSolved}\r\n                {showPercentage && <tspan fontSize=\"12px\">{\".\" + percentageAfter}</tspan>}\r\n            </text>\r\n            \r\n            <text\r\n                id=\"progress_label\"\r\n                x=\"62px\" y=\"100px\"\r\n                fill={secondaryColor} fontSize=\"12px\" \r\n                style={{transform:\"rotate(90deg) translate(0, -156px)\"}}\r\n            >   \r\n                solved\r\n            </text>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default OverallProgress"],"names":["OverallProgress","totalQuestions","totalSolved","primaryColor","secondaryColor","showPercentage","setShowPercentage","useState","solvedPercentage","radius","circumference","offset","percentageBefore","percentageAfter","jsxs","jsx"],"mappings":";;AAkBA,SAASA,EAAgB;AAAA,EACrB,gBAAAC;AAAA,EACA,aAAAC;AAAA,EACA,cAAAC,IAAe;AAAA,EACf,gBAAAC,IAAiB;AACrB,GAAU;AAEN,QAAM,CAACC,GAAgBC,CAAiB,IAAIC,EAAS,EAAK,GAEpDC,KAAqBN,IAAeD,IAAmB,KAAK,QAAQ,CAAC,GACrEQ,IAAS,IACTC,IAAgB,IAAI,KAAK,KAAID,GAC7BE,IAASD,MAAkB,MAAM,WAAWF,CAAgB,KAAG,MAE/DI,IAAmBJ,EAAiB,MAAM,GAAG,EAAE,CAAC,GAChDK,IAAkBL,EAAiB,MAAM,GAAG,EAAE,CAAC,IAAI;AAGrD,SAAAM,gBAAAA,EAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACG,IAAG;AAAA,MACH,aAAa,MAAM;AACf,QAAAR,EAAkB,EAAI;AAAA,MAC1B;AAAA,MACA,YAAY,MAAM;AACd,QAAAA,EAAkB,EAAK;AAAA,MAC3B;AAAA,MACA,SAAQ;AAAA,MACR,OAAO,EAAC,WAAU,iBAAgB;AAAA,MAClC,WAAU;AAAA,MAEV,UAAA;AAAA,QAAAS,gBAAAA,EAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YAAO,IAAG;AAAA,YAAcN;AAAA,YAAW,IAAG;AAAA,YAAK,IAAG;AAAA,YAC3C,MAAK;AAAA,YACL,QAAO;AAAA,YACP,aAAY;AAAA,YACZ,SAAS;AAAA,UAAA;AAAA,QACb;AAAA,QACAM,gBAAAA,EAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACG,IAAG;AAAA,YACHN;AAAA,YAAW,IAAG;AAAA,YAAK,IAAG;AAAA,YACtB,MAAK;AAAA,YAAc,QAAQ;AAAA,YAC3B,aAAY;AAAA,YACZ,iBAAiBC;AAAA,YACjB,kBAAkBC;AAAA,YAClB,eAAc;AAAA,YACd,OAAO,EAAC,cAAa,MAAK;AAAA,YAE1B,UAAAI,gBAAAA,EAAA,IAAC,WAAQ,EAAA,IAAG,2BAA0B,eAAc,qBAAoB,QAAQ,OAAOJ,CAAM,IAAI,KAAI,KAAK,CAAA;AAAA,UAAA;AAAA,QAC9G;AAAA,QAEAG,gBAAAA,EAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACG,IAAG;AAAA,YACH,GAAE;AAAA,YAAM,GAAE;AAAA,YACV,MAAMX;AAAA,YAAc,UAAS;AAAA,YAC7B,YAAW;AAAA,YACX,YAAW;AAAA,YACX,OAAO,EAAC,WAAU,qCAAoC;AAAA,YAErD,UAAA;AAAA,cAAAE,IAAiBO,IAAmBV;AAAA,cACpCG,KAAmBU,gBAAAA,EAAAA,IAAA,SAAA,EAAM,UAAS,QAAQ,gBAAMF,GAAgB;AAAA,YAAA;AAAA,UAAA;AAAA,QACrE;AAAA,QAEAE,gBAAAA,EAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACG,IAAG;AAAA,YACH,GAAE;AAAA,YAAO,GAAE;AAAA,YACX,MAAMX;AAAA,YAAgB,UAAS;AAAA,YAC/B,OAAO,EAAC,WAAU,qCAAoC;AAAA,YACzD,UAAA;AAAA,UAAA;AAAA,QAED;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAGZ;"}